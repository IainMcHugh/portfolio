{"version":3,"sources":["images/iain-with-gear.png","images/sunset-bg.png","images/rock-bg.png","images/iain-animate-stationary.png","Components/Iains/IainClimbing.js","Components/Section1/Section1.js","Components/Projects/projects.js","Components/Section2/Tag.js","Components/Section2/Project.js","Components/Section2/Section2.js","Components/Section3/Section3.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","IainClimbing","className","id","src","IainGear","Section1","SunsetBackGround","RockBG","projects","names","TRP","github","logo","live","desktopMobile","description","status","OpenWeatherAPI","Covid19Tracker","HungryFrontend","HungryBackend","Clymbr","MWLoadouts","VidQuiz","Programa","technologies","html","css","javascript","jquery","reactjs","typescript","androidsdk","flutter","nodejs","php","sql","firebase","mongodb","scss","apis","Tag","props","activeTech","name","toLowerCase","onClick","e","select","Project","useEffect","console","log","proj","href","target","fontSize","Section2","useState","setProjects","filteredProjects","setFilteredProjects","setactiveTech","projects_json","tagSelect","innerText","currActive","newActive","filterProjArr","filtered","Object","keys","filter","key","includes","reduce","obj","map","technology","index","project","Section3","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a1e3132.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iain-with-gear.dee9df96.png\";","module.exports = __webpack_public_path__ + \"static/media/sunset-bg.5c96c12e.png\";","module.exports = __webpack_public_path__ + \"static/media/rock-bg.850431e4.png\";","module.exports = __webpack_public_path__ + \"static/media/iain-animate-stationary.39e0bd6c.png\";","import React from \"react\";\r\nimport Iain1 from \"../../images/iain-animate-stationary.png\";\r\nimport IainGear from \"../../images/iain-with-gear.png\";\r\n\r\nconst IainClimbing = () => (\r\n  <div className=\"iain-container\">\r\n    <img id=\"iain-container_img\" src={IainGear}></img>\r\n  </div>\r\n);\r\n\r\nexport default IainClimbing;\r\n","import React from \"react\";\r\nimport IainClimbing from \"../Iains/IainClimbing\";\r\nimport SunsetBackGround from \"../../images/sunset-bg.png\";\r\nimport RockBG from \"../../images/rock-bg.png\";\r\n\r\nimport \"./Section1.css\";\r\n\r\nconst Section1 = () => {\r\n  return (\r\n    <div className=\"section1-wrapper\">\r\n      <div className=\"background-container\">\r\n        <img id=\"background-container_img\" src={SunsetBackGround} />\r\n      </div>\r\n      <div className=\"rock-container\">\r\n        <img id=\"rock-container_img\" src={RockBG}></img>\r\n      </div>\r\n      <IainClimbing />\r\n      <div id=\"intro-wrapper\">\r\n        <div id=\"intro-title\">\r\n          <h2>Iain McHugh</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section1;\r\n","import React from \"react\";\r\n\r\nlet projects = {\r\n  names: {\r\n    TRP: {\r\n      github: \"https://github.com/IainMcHugh/tallaghtrehabilitationproject\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/tallaghtrehabilitationproject/blob/master/src/images/full_logo.png?raw=true\",\r\n      live: \"https://iainmchugh.github.io/tallaghtrehabilitationproject\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"An extensive Website created for the Tallaght Rehabiliation Center using ReactJS.\",\r\n      status: \"(Under Development)\",\r\n    },\r\n    OpenWeatherAPI: {\r\n      github: \"https://github.com/IainMcHugh/axonista_technical_test\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/axonista_technical_test/blob/master/src/images/newLogo2.png?raw=true\",\r\n      live: \"https://iainmchugh.github.io/axonista_technical_test/\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"Weather Application that uses caching, geolocation, and API requests to provide visual weather data for both the users location and searched locations. Designed in ReactJS with Unit Tests\",\r\n      status: \"(Complete)\",\r\n    },\r\n    Covid19Tracker: {\r\n      github: \"https://github.com/IainMcHugh/corona-tracker\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/corona-tracker/blob/master/src/images/covidLogo.png?raw=true\",\r\n      live: \"https://iainmchugh.github.io/corona-tracker/\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"Web Application for visualising Covid19 statistics using an API\",\r\n      status: \"(Complete)\",\r\n    },\r\n    HungryFrontend: {\r\n      github: \"https://github.com/IainMcHugh/Hungry-Frontend\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/Hungry-Frontend/blob/master/src/images/gitLogo2.PNG?raw=true\",\r\n      live: \"#\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"Fullstack project aimed at bringing restaurant menus online, as well as providing a CMS for restaurants\",\r\n      status: \"(Under Development)\",\r\n    },\r\n    HungryBackend: {\r\n      github: \"https://github.com/IainMcHugh/Hungry-Backend\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/Hungry-Frontend/blob/master/src/images/gitLogo.PNG?raw=true\",\r\n      live: \"#\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"Fullstack project aimed at bringing restaurant menus online, as well as providing a CMS for restaurants\",\r\n      status: \"(Under Development)\",\r\n    },\r\n    Clymbr: {\r\n      github: \"https://github.com/IainMcHugh/clymbr-app\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/clymbr-app/blob/master/app/src/main/ic_launcher_clymbr-web.png?raw=true\",\r\n      live:\r\n        \"https://play.google.com/store/apps/details?id=com.clymbra.clymbralpha\",\r\n      desktopMobile: false,\r\n      description:\r\n        \"Android app that provides a visual mapping of climbing gyms and allows climbers to track the progress of their climbs\",\r\n      status: \"(Complete)\",\r\n    },\r\n    MWLoadouts: {\r\n      github: \"https://github.com/IainMcHugh/mwloadouts\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/mwloadouts/blob/master/lib/assets/Logo2.png?raw=true\",\r\n      live:\r\n        \"https://play.google.com/store/apps/details?id=com.iainmchugh.mwloadouts\",\r\n      desktopMobile: false,\r\n      description:\r\n        \"Flutter app that allows users to recreate their Call of Duty Weapon Classes down to each individual attachment. Can search and share Classes with friends\",\r\n      status: \"(Complete)\",\r\n    },\r\n    VidQuiz: {\r\n      github: \"https://github.com/IainMcHugh/VidQuiz\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/VidQuiz/blob/master/images/youtubequiz.png?raw=true\",\r\n      live: \"#\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"A simple quiz site that allows users to create and complete quizzes of their favourite Youtube videos, designed entirely with PHP/SQL\",\r\n      status: \"(Complete)\",\r\n    },\r\n    Programa: {\r\n      github: \"https://github.com/IainMcHugh/Programa\",\r\n      logo:\r\n        \"https://github.com/IainMcHugh/Programa/blob/master/src/images/program-fitness.png?raw=true\",\r\n      live: \"https://iainmchugh.github.io/programa/\",\r\n      desktopMobile: true,\r\n      description:\r\n        \"Expansive Web Application that allows users to create, schedule, and complete workouts, tracking their sets, reps, and weights used. Designed with TypeScript/Firebase\",\r\n      status: \"(Complete)\",\r\n    },\r\n  },\r\n  technologies: {\r\n    html: [\r\n      \"TRP\",\r\n      \"OpenWeatherAPI\",\r\n      \"Covid19Tracker\",\r\n      \"HungryFrontend\",\r\n      \"VidQuiz\",\r\n      \"Programa\",\r\n    ],\r\n    css: [\"TRP\", \"Covid19Tracker\", \"HungryFrontend\", \"VidQuiz\", \"Programa\"],\r\n    javascript: [\r\n      \"TRP\",\r\n      \"OpenWeatherAPI\",\r\n      \"Covid19Tracker\",\r\n      \"HungryFrontend\",\r\n      \"Programa\",\r\n    ],\r\n    jquery: [],\r\n    reactjs: [\"TRP\", \"OpenWeatherAPI\", \"Covid19Tracker\", \"HungryFrontend\"],\r\n    typescript: [\"Programa\"],\r\n    androidsdk: [\"Clymbr\"],\r\n    flutter: [\"MWLoadouts\"],\r\n    nodejs: [\"HungryBackend\"],\r\n    php: [\"VidQuiz\"],\r\n    sql: [\"VidQuiz\"],\r\n    firebase: [\"Clymbr\", \"MWLoadouts\", \"Programa\"],\r\n    mongodb: [\"HungryBackend\"],\r\n    scss: [\"OpenWeatherAPI\"],\r\n    \"@material-ui\": [\"OpenWeatherAPI\", \"Covid19Tracker\", \"MWLoadouts\"],\r\n    apis: [\"OpenWeatherAPI\", \"Covid19Tracker\"],\r\n  },\r\n};\r\n\r\nexport default projects;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Tag = (props) => (\r\n    <div\r\n      id={props.activeTech == props.name.toLowerCase() ? \"tag-active\" : null}\r\n      className=\"tag-container\"\r\n      onClick={(e) => props.select(e)}\r\n    >\r\n      <h4>{props.name}</h4>\r\n    </div>\r\n  );\r\n\r\nexport default Tag;\r\n","import React, {useEffect} from \"react\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport SmartPhoneIcon from \"@material-ui/icons/Smartphone\";\r\nimport DesktopWindowsIcon from \"@material-ui/icons/DesktopWindows\";\r\n\r\nconst Project = (props) => {\r\n  useEffect(()=>{\r\n    console.log(\"HEllo\");\r\n  },[])\r\n  return (\r\n    <div id=\"project-container\">\r\n      <div>\r\n        <img id=\"project-img\" src={props.proj.logo} />\r\n        <div id=\"project-overlay\">\r\n          <h2>{props.name}</h2>\r\n          <h4>{props.proj.description}</h4>\r\n          <h4>{props.proj.status}</h4>\r\n          <div id=\"project-overlay_icons\">\r\n            <a href={props.proj.github} target=\"_blank\">\r\n              <CodeIcon fontSize=\"large\" />\r\n            </a>\r\n\r\n            <a href={props.proj.live} target=\"_blank\">\r\n              {props.proj.desktopMobile ? (\r\n                <DesktopWindowsIcon fontSize=\"large\" />\r\n              ) : (\r\n                <SmartPhoneIcon fontSize=\"large\" />\r\n              )}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Section2.css\";\r\nimport projects_json from \"../Projects/projects\";\r\nimport Tag from \"./Tag\";\r\nimport Project from \"./Project\";\r\n\r\nconst Section2 = () => {\r\n  const [projects, setProjects] = useState(null);\r\n  const [filteredProjects, setFilteredProjects] = useState(null);\r\n  const [activeTech, setactiveTech] = useState();\r\n\r\n  useEffect(() => {\r\n    setProjects(projects_json);\r\n    setFilteredProjects(projects_json);\r\n  }, []);\r\n\r\n  const tagSelect = (e) => {\r\n    console.log(e.target.innerText.toLowerCase());\r\n    let currActive = activeTech;\r\n    let newActive = e.target.innerText.toLowerCase();\r\n\r\n    if (currActive == newActive) {\r\n      setactiveTech(null);\r\n      setFilteredProjects(projects_json);\r\n    } else {\r\n      setactiveTech(newActive);\r\n      let filterProjArr = projects.technologies[e.target.innerText];\r\n      console.log(filterProjArr);\r\n\r\n      const filtered = Object.keys(projects.names)\r\n        .filter((key) => filterProjArr.includes(key))\r\n        .reduce((obj, key) => {\r\n          obj[key] = projects.names[key];\r\n          return obj;\r\n        }, {});\r\n\r\n      setFilteredProjects(filtered);\r\n      // console.log(filtered);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"section2-wrapper\">\r\n      <div id=\"section2-title\">\r\n        {/* {console.log(activeTech)} */}\r\n        <h2>Projects</h2>\r\n      </div>\r\n      {projects !== null ? (\r\n        <div id=\"projects\">\r\n          <div id=\"tags-container\">\r\n            {Object.keys(projects.technologies).map((technology, index) => {\r\n              return (\r\n                <Tag\r\n                  key={index}\r\n                  name={technology}\r\n                  select={tagSelect}\r\n                  activeTech={activeTech}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div id=\"projects-container\">\r\n            {activeTech\r\n              ?\r\n              // console.log(filteredProjects)\r\n              Object.keys(filteredProjects).map((project, index) => {\r\n                  return (\r\n                    <Project\r\n                      key={index}\r\n                      proj={filteredProjects[project]}\r\n                      name={project}\r\n                    />\r\n                  );\r\n                })\r\n                : \r\n                Object.keys(projects.names).map((project, index) => {\r\n                  return (\r\n                    <Project\r\n                      key={index}\r\n                      proj={projects.names[project]}\r\n                      name={project}\r\n                    />\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>Loading Data...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n\r\n{\r\n  /* <a href={projects.projects.TRP.github}>\r\n              {projects.projects.TRP.github}\r\n            </a> */\r\n}\r\n","import React from \"react\";\r\n\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\n\r\nimport \"./Section3.css\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <div className=\"section3-wrapper\">\r\n      <div id=\"contact-container\">\r\n        <a\r\n          href=\"https://drive.google.com/file/d/1LIJUkG2MsZRAdKccne47pzFUu2PeursF/view?usp=sharing\"\r\n           target=\"_blank\"\r\n           className=\"contact\"\r\n        >\r\n          <DescriptionIcon fontSize=\"large\" />\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/iain-mchugh/\" target=\"_blank\" className=\"contact\">\r\n          <LinkedInIcon fontSize=\"large\" />\r\n        </a>\r\n        <a href=\"mailto:iamchugh@tcd.ie?subject=Portfolio&body=Hi Iain,\" target=\"_blank\" className=\"contact\">\r\n          <AlternateEmailIcon fontSize=\"large\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from 'react';\nimport './App.css';\n\nimport Section1 from \"./Section1/Section1\"\nimport Section2 from \"./Section2/Section2\"\nimport Section3 from \"./Section3/Section3\"\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Section1 />\n      <Section2 />\n      <Section3 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}